kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
make.plots(5, 5)
data1 <- calculate.data(2, 5)
data2 <- calculate.data(5, 5)
data3 <- calculate.data(5, 2)
data4 <- calculate.data(0.5, 0.5)
view(data1)
view(data2)
all.data <- rbind(data1,
data2,
data3,
data4)
view(all.data)
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 5)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(5, 5)
all.data <- rbind(data1,
data2,
data3,
data4)
plot.data1 + plot.data2 + plot.data3 + plot.data4
library(ggplot2)
plot.data1 + plot.data2 + plot.data3 + plot.data4
library(ggplot)
library(ggplot2)
plot.data1 + plot.data2 + plot.data3 + plot.data4
plot.data3 + plot.data4
library(patchwork)
plot.data1 + plot.data2
plot.data3 + plot.data4
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf)) +
ggtitle(alpha, beta)
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
x = seq(-0.25, 1.25, length.out=1000)
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
integrate(integrand)
integrate(integrand, lower = -0.25)
integrate(integrand, lower = -0.25, upper = 1.25)
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}elif(centered == TRUE){
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}elif(centered == TRUE){
library(tidyverse)
library(ggplot2)
library(patchwork)
set.seed(7272)
alpha <- 2
beta <- 5
calculate.data <- function(alpha, beta) {
mean <- alpha/(alpha + beta)
varience <- (alpha * beta) / (((alpha + beta)**2) * (alpha + beta + 1))
skewness <- (2 * (beta - alpha) * ((alpha + beta + 1) ** (1/2))) /
((alpha + beta + 2) * ((alpha * beta) ** (1/2)))
kurt <- (6 * (((alpha + beta)**2) * (alpha + beta + 1) - (alpha * beta) * (alpha + beta + 2)) /
((alpha * beta) * (alpha + beta + 2) * (alpha + beta + 3))) - 3
data <- tibble(
mean = mean,
varience = varience,
skewness = skewness,
kurt = kurt
)
return(data)
}
make.plots <- function(alpha, beta) {
beta.figure.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
mutate(beta.pdf = dbeta(x, alpha, beta))
ggplot(data = beta.figure.data) +
geom_line(aes(x=x, y=beta.pdf))
}
data1 <- calculate.data(2, 5)
plot.data1 <- make.plots(2, 5)
data2 <- calculate.data(5, 5)
plot.data2 <- make.plots(5, 5)
data3 <- calculate.data(5, 2)
plot.data3 <- make.plots(5, 2)
data4 <- calculate.data(0.5, 0.5)
plot.data4 <- make.plots(0.5, 0.5)
plot.data1 + plot.data2 + plot.data3 + plot.data4
all.data <- rbind(data1,
data2,
data3,
data4)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}else if(centered == TRUE){
integrand = function(x) {((x-)^k) * dbeta(x, alpha, beta)}
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -0.25, upper = 1.25)
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 500)
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -0.25, upper = 1.25)
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 500)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -0.25, upper = 1.25)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 1.25)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 500)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -0.25, upper = 1.25)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -0.25, upper = 500)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment(5,5,3,FALSE)
beta.moment(5,5,3,TRUE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(5,5,3,TRUE)
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
x = seq(-0.25, 1.25, length.out=1000)
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x^k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
beta.moment(2,5,3,FALSE)
set.seed(7272)
n <- 500
beta.sample <- rbeta(n = n, # sample size shape1 = alpha, # alpha parameter
shape2 = beta) # beta parameter
beta.moment(2,5,3,FALSE)
set.seed(7272)
n <- 500
beta.sample <- rbeta(n = n, # sample size shape1 = alpha, # alpha parameter
shape1 = alpha,
shape2 = beta) # beta parameter
ggplot() +
geom_histogram(data=tibble(sample = beta.sample), aes(x=sample, y = after_stat(density), color = "Histogram")) +
geom_density(data=tibble(sample = beta.sample), aes(x=sample, color = "Density"), key_glyph = draw_key_path) +
geom_line(data=q1.fig.dat, aes(x=x, y=beta.pdf, color="Beta(2,5)")) + # plot beta dist
theme_bw()+                                                           # change theme
xlab("x")+                                                            # label x axis
ylab("Density")+                                                      # label y axis
theme(legend.position = "bottom")
beta.moment(5,5,1,FALSE)
beta.moment(5,5,1,TRUE)
beta.moment(5,5,1,FALSE)
beta.moment(0.5,0.5,1,FALSE)
beta.moment(0.5,0.5,1,TRUE)
beta.moment(5,5,1,TRUE)
beta.moment(5,5,1,TRUE)
beta.moment(5,5,1,FALSE)
beta.moment <- function(alpha, beta, k, centered) {
if(centered == FALSE){
integrand = function(x) {(x**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}else if(centered == TRUE){
integrand = function(x) {(x) * dbeta(x, alpha, beta)}
mu <- integrate(integrand, lower = -Inf, upper = Inf)$value
integrand = function(x) {((x-mu)**k) * dbeta(x, alpha, beta)}
value <- integrate(integrand, lower = -Inf, upper = Inf)$value
}
return(value)
}
beta.moment(2,5,3,FALSE)
set.seed(7272)
n <- 500
get.data <- function(alpha, beta, n) {
beta.sample <- rbeta(n = n, # sample size shape1 = alpha, # alpha parameter
shape1 = alpha,
shape2 = beta) # beta parameter
}
sample1 <- data.frame(get.data(2,5,n))
sample2 <- data.frame(get.data(5,5,n))
sample3 <- data.frame(get.data(5,2,n))
sample4 <- data.frame(get.data(0.5,0.5,n))
sample1
